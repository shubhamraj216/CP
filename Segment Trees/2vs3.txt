// change char x to string
// char z='x';
// string(1,z);
#include<bits/stdc++.h>
using namespace std;
int change(string s){
    int p=0;
    for(int i=0; i<s.size(); i++){
        p+=((int)s[i])*pow(2,s.size()-i-1);
    }
    return p;
}
void buildtree(string st[], string tree[], int start, int end, int nodex){
    if(start==end){
        tree[nodex]=st[start];
        return;
    }
    int mid=start+(end-start)/2;
    buildtree(st, tree, start, mid,2*nodex);
    buildtree(st, tree, mid+1, end,2*nodex+1);
    tree[nodex]=tree[2*nodex]+tree[2*nodex+1];
}
string query(string tree[], int start, int end, int left, int right, int nodex){
    if(start>right || end<left){
        return "";
    }
    if(start>=left && end<=right){
        return tree[nodex];
    }
    int mid=start+(end-start)/2;
    string ans1=query(tree, start, mid, left, right, 2*nodex);
    string ans2=query(tree, mid+1, end, left, right, 2*nodex+1);
    return ans1+ans2;
}
void update(string tree[], int start, int end, int idx, int nodex){
    if(start==end){
        char x='0';
        char y='1';
        if(tree[nodex]==string(1,x)){
            tree[nodex]=string(1,y);
        }
        return;
    }
    int mid=start+(end-start)/2;
    if(idx<=mid){
        update(tree, start, mid, idx, 2*nodex);
    }else{
        update(tree, mid+1, end, idx, 2*nodex+1);
    }
    tree[nodex]=tree[2*nodex]+tree[2*nodex+1];
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin>>n;
    string s;
    cin>>s;
    string st[n];
    for(int i=0;i<s.size();i++){
        st[i]=s[i];
    }
    string* tree=new string[4*n];
    buildtree(st, tree, 0, n-1, 1);
    // for(int i=1;i<4*n;i++){
    //     cout<<tree[i]<<endl;
    // }
    int q;
    cin>>q;
    vector<string>vect;
    while(q--){
        int z,a,b;
        cin>>z;
        if(z==0){
            cin>>a>>b;
            vect.push_back(query(tree, 0, n-1, a, b, 1));
        }else{
            cin>>a;
            update(tree, 0, n-1, a, 1);
        }
    }
    for(int i=0;i<vect.size();i++){
        cout<<change(vect[i])%3<<endl;
    }
	// Write your code here
}
