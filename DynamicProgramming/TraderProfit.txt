#include <bits/stdc++.h>
using namespace std;
int findprofit(int *arr,int n,int k,int ongoing,int dp[35][12][2])
{
    if(n==0)
    {
        return 0;
    }
    
    if(dp[n][k][ongoing]>-1)
    {
        return dp[n][k][ongoing];
    }
    
    int op1=findprofit(arr+1,n-1,k,ongoing,dp);
    int op2=-1;
    if(ongoing)
    {
        op2=findprofit(arr+1,n-1,k-1,0,dp)+arr[0];
    }
    else
    {
        if(k>0)
        {
            op2=findprofit(arr+1,n-1,k,1,dp)-arr[0];
        }
    }
    dp[n][k][ongoing]=max(op1,op2);
    return max(op1,op2);
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int k,n;
        cin>>k;
        cin>>n;
        int *arr=new int[n];
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];   
        }
        int dp[35][12][2];
        for(int i=0;i<35;i++)
        {
            for(int j=0;j<12;j++)
            {
                for(int k=0;k<2;k++)
                {
                    dp[i][j][k]=-1;
                }
            }
        }
        cout<<findprofit(arr,n,k,0,dp)<<"\n";
    }
    return 0;
}
