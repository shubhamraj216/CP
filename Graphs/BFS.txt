#include <bits/stdc++.h>
using namespace std;

void printbfs(int** edges, int V, bool* visited, int sv, queue<int> mq){
    if(mq.empty()){
        return;
    }else{
        cout<<mq.front()<<" ";
        visited[mq.front()]=true;
        mq.pop();
    }
    for(int i=0;i<V;i++){
        if(i==sv){
            continue;
        }
        if(edges[sv][i]==1){
            if(visited[i]){
                continue;
            }else{
                mq.push(i);
                visited[i]=true;
            }
        }
    }
    printbfs(edges, V, visited, mq.front(), mq);
}

int main() {
    int V, E;
    cin >> V >> E;

  /*

  	   Write Your Code Here
	   Complete the Rest of the Program
	   You have to take input and print the output yourself
	 
  */
    int** edges=new int*[V];
    for(int i=0;i<V;i++){
        edges[i]=new int[V];
        for(int j=0;j<V;j++){
            edges[i][j]=0;
        }
    }
    
    for(int i=0;i<E;i++){
        int x,y;
        cin>>x>>y;
        edges[x][y]=1;
        edges[y][x]=1;
    }
    bool* visited=new bool[V];
    for(int i=0;i<V;i++){
        visited[i]=false;
    }
    queue<int>mq;
    mq.push(0);
    printbfs(edges,V,visited,0,mq);
    for(int i=0;i<V;i++){
        delete[] edges[i];
    }
  return 0;
}
